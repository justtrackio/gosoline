// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// FullModule is an autogenerated mock type for the FullModule type
type FullModule struct {
	mock.Mock
}

// GetStage provides a mock function with given fields:
func (_m *FullModule) GetStage() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// IsBackground provides a mock function with given fields:
func (_m *FullModule) IsBackground() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsEssential provides a mock function with given fields:
func (_m *FullModule) IsEssential() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Run provides a mock function with given fields: ctx
func (_m *FullModule) Run(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFullModule interface {
	mock.TestingT
	Cleanup(func())
}

// NewFullModule creates a new instance of FullModule. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFullModule(t mockConstructorTestingTNewFullModule) *FullModule {
	mock := &FullModule{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
