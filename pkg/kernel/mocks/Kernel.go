// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Kernel is an autogenerated mock type for the Kernel type
type Kernel struct {
	mock.Mock
}

// Run provides a mock function with given fields:
func (_m *Kernel) Run() {
	_m.Called()
}

// Running provides a mock function with given fields:
func (_m *Kernel) Running() <-chan struct{} {
	ret := _m.Called()

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// Stop provides a mock function with given fields: reason
func (_m *Kernel) Stop(reason string) {
	_m.Called(reason)
}

type mockConstructorTestingTNewKernel interface {
	mock.TestingT
	Cleanup(func())
}

// NewKernel creates a new instance of Kernel. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewKernel(t mockConstructorTestingTNewKernel) *Kernel {
	mock := &Kernel{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
