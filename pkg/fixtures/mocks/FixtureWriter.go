// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// FixtureWriter is an autogenerated mock type for the FixtureWriter type
type FixtureWriter struct {
	mock.Mock
}

type FixtureWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *FixtureWriter) EXPECT() *FixtureWriter_Expecter {
	return &FixtureWriter_Expecter{mock: &_m.Mock}
}

// Purge provides a mock function with given fields: ctx
func (_m *FixtureWriter) Purge(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for Purge")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FixtureWriter_Purge_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Purge'
type FixtureWriter_Purge_Call struct {
	*mock.Call
}

// Purge is a helper method to define mock.On call
//   - ctx context.Context
func (_e *FixtureWriter_Expecter) Purge(ctx interface{}) *FixtureWriter_Purge_Call {
	return &FixtureWriter_Purge_Call{Call: _e.mock.On("Purge", ctx)}
}

func (_c *FixtureWriter_Purge_Call) Run(run func(ctx context.Context)) *FixtureWriter_Purge_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *FixtureWriter_Purge_Call) Return(_a0 error) *FixtureWriter_Purge_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FixtureWriter_Purge_Call) RunAndReturn(run func(context.Context) error) *FixtureWriter_Purge_Call {
	_c.Call.Return(run)
	return _c
}

// Write provides a mock function with given fields: ctx, _a1
func (_m *FixtureWriter) Write(ctx context.Context, _a1 []interface{}) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []interface{}) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FixtureWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type FixtureWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - ctx context.Context
//   - _a1 []interface{}
func (_e *FixtureWriter_Expecter) Write(ctx interface{}, _a1 interface{}) *FixtureWriter_Write_Call {
	return &FixtureWriter_Write_Call{Call: _e.mock.On("Write", ctx, _a1)}
}

func (_c *FixtureWriter_Write_Call) Run(run func(ctx context.Context, _a1 []interface{})) *FixtureWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]interface{}))
	})
	return _c
}

func (_c *FixtureWriter_Write_Call) Return(_a0 error) *FixtureWriter_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FixtureWriter_Write_Call) RunAndReturn(run func(context.Context, []interface{}) error) *FixtureWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewFixtureWriter creates a new instance of FixtureWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFixtureWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *FixtureWriter {
	mock := &FixtureWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
