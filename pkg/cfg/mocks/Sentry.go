// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	sentry "github.com/getsentry/sentry-go"
	mock "github.com/stretchr/testify/mock"
)

// Sentry is an autogenerated mock type for the Sentry type
type Sentry struct {
	mock.Mock
}

// CaptureException provides a mock function with given fields: exception, hint, scope
func (_m *Sentry) CaptureException(exception error, hint *sentry.EventHint, scope sentry.EventModifier) *sentry.EventID {
	ret := _m.Called(exception, hint, scope)

	var r0 *sentry.EventID
	if rf, ok := ret.Get(0).(func(error, *sentry.EventHint, sentry.EventModifier) *sentry.EventID); ok {
		r0 = rf(exception, hint, scope)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sentry.EventID)
		}
	}

	return r0
}

type mockConstructorTestingTNewSentry interface {
	mock.TestingT
	Cleanup(func())
}

// NewSentry creates a new instance of Sentry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSentry(t mockConstructorTestingTNewSentry) *Sentry {
	mock := &Sentry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
