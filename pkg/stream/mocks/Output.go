// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	stream "github.com/justtrackio/gosoline/pkg/stream"
	mock "github.com/stretchr/testify/mock"
)

// Output is an autogenerated mock type for the Output type
type Output struct {
	mock.Mock
}

// Write provides a mock function with given fields: ctx, batch
func (_m *Output) Write(ctx context.Context, batch []stream.WritableMessage) error {
	ret := _m.Called(ctx, batch)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []stream.WritableMessage) error); ok {
		r0 = rf(ctx, batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteOne provides a mock function with given fields: ctx, msg
func (_m *Output) WriteOne(ctx context.Context, msg stream.WritableMessage) error {
	ret := _m.Called(ctx, msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, stream.WritableMessage) error); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOutput interface {
	mock.TestingT
	Cleanup(func())
}

// NewOutput creates a new instance of Output. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOutput(t mockConstructorTestingTNewOutput) *Output {
	mock := &Output{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
