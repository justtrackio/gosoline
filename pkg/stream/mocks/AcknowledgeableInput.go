// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	stream "github.com/applike/gosoline/pkg/stream"
	mock "github.com/stretchr/testify/mock"
)

// AcknowledgeableInput is an autogenerated mock type for the AcknowledgeableInput type
type AcknowledgeableInput struct {
	mock.Mock
}

// Ack provides a mock function with given fields: ctx, msg
func (_m *AcknowledgeableInput) Ack(ctx context.Context, msg *stream.Message) error {
	ret := _m.Called(ctx, msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *stream.Message) error); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AckBatch provides a mock function with given fields: ctx, msgs
func (_m *AcknowledgeableInput) AckBatch(ctx context.Context, msgs []*stream.Message) error {
	ret := _m.Called(ctx, msgs)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*stream.Message) error); ok {
		r0 = rf(ctx, msgs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
