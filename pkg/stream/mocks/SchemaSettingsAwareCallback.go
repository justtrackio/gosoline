// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	stream "github.com/justtrackio/gosoline/pkg/stream"
	mock "github.com/stretchr/testify/mock"
)

// SchemaSettingsAwareCallback is an autogenerated mock type for the SchemaSettingsAwareCallback type
type SchemaSettingsAwareCallback struct {
	mock.Mock
}

type SchemaSettingsAwareCallback_Expecter struct {
	mock *mock.Mock
}

func (_m *SchemaSettingsAwareCallback) EXPECT() *SchemaSettingsAwareCallback_Expecter {
	return &SchemaSettingsAwareCallback_Expecter{mock: &_m.Mock}
}

// GetSchemaSettings provides a mock function with no fields
func (_m *SchemaSettingsAwareCallback) GetSchemaSettings() stream.SchemaSettings {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSchemaSettings")
	}

	var r0 stream.SchemaSettings
	if rf, ok := ret.Get(0).(func() stream.SchemaSettings); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(stream.SchemaSettings)
	}

	return r0
}

// SchemaSettingsAwareCallback_GetSchemaSettings_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSchemaSettings'
type SchemaSettingsAwareCallback_GetSchemaSettings_Call struct {
	*mock.Call
}

// GetSchemaSettings is a helper method to define mock.On call
func (_e *SchemaSettingsAwareCallback_Expecter) GetSchemaSettings() *SchemaSettingsAwareCallback_GetSchemaSettings_Call {
	return &SchemaSettingsAwareCallback_GetSchemaSettings_Call{Call: _e.mock.On("GetSchemaSettings")}
}

func (_c *SchemaSettingsAwareCallback_GetSchemaSettings_Call) Run(run func()) *SchemaSettingsAwareCallback_GetSchemaSettings_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SchemaSettingsAwareCallback_GetSchemaSettings_Call) Return(_a0 stream.SchemaSettings) *SchemaSettingsAwareCallback_GetSchemaSettings_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SchemaSettingsAwareCallback_GetSchemaSettings_Call) RunAndReturn(run func() stream.SchemaSettings) *SchemaSettingsAwareCallback_GetSchemaSettings_Call {
	_c.Call.Return(run)
	return _c
}

// NewSchemaSettingsAwareCallback creates a new instance of SchemaSettingsAwareCallback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSchemaSettingsAwareCallback(t interface {
	mock.TestingT
	Cleanup(func())
}) *SchemaSettingsAwareCallback {
	mock := &SchemaSettingsAwareCallback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
