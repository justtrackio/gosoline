// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cloud "github.com/applike/gosoline/pkg/cloud"
	kinesis "github.com/aws/aws-sdk-go/service/kinesis"

	mock "github.com/stretchr/testify/mock"
)

// StreamClient is an autogenerated mock type for the StreamClient type
type StreamClient struct {
	mock.Mock
}

// GetActiveShardCount provides a mock function with given fields: application, eventType
func (_m *StreamClient) GetActiveShardCount(application string, eventType string) int {
	ret := _m.Called(application, eventType)

	var r0 int
	if rf, ok := ret.Get(0).(func(string, string) int); ok {
		r0 = rf(application, eventType)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// SetShardCount provides a mock function with given fields: input
func (_m *StreamClient) SetShardCount(input *cloud.ScaleStreamInput) []*kinesis.UpdateShardCountOutput {
	ret := _m.Called(input)

	var r0 []*kinesis.UpdateShardCountOutput
	if rf, ok := ret.Get(0).(func(*cloud.ScaleStreamInput) []*kinesis.UpdateShardCountOutput); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*kinesis.UpdateShardCountOutput)
		}
	}

	return r0
}
