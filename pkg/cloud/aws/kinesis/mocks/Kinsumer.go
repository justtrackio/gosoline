// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	kinesis "github.com/justtrackio/gosoline/pkg/cloud/aws/kinesis"
	mock "github.com/stretchr/testify/mock"
)

// Kinsumer is an autogenerated mock type for the Kinsumer type
type Kinsumer struct {
	mock.Mock
}

// Run provides a mock function with given fields: ctx, handler
func (_m *Kinsumer) Run(ctx context.Context, handler kinesis.MessageHandler) error {
	ret := _m.Called(ctx, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, kinesis.MessageHandler) error); ok {
		r0 = rf(ctx, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *Kinsumer) Stop() {
	_m.Called()
}

type mockConstructorTestingTNewKinsumer interface {
	mock.TestingT
	Cleanup(func())
}

// NewKinsumer creates a new instance of Kinsumer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewKinsumer(t mockConstructorTestingTNewKinsumer) *Kinsumer {
	mock := &Kinsumer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
