// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	context "context"

	kinesis "github.com/justtrackio/gosoline/pkg/cloud/aws/kinesis"
	mock "github.com/stretchr/testify/mock"
)

// RecordWriter is an autogenerated mock type for the RecordWriter type
type RecordWriter struct {
	mock.Mock
}

// PutRecord provides a mock function with given fields: ctx, record
func (_m *RecordWriter) PutRecord(ctx context.Context, record *kinesis.Record) error {
	ret := _m.Called(ctx, record)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *kinesis.Record) error); ok {
		r0 = rf(ctx, record)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PutRecords provides a mock function with given fields: ctx, batch
func (_m *RecordWriter) PutRecords(ctx context.Context, batch []*kinesis.Record) error {
	ret := _m.Called(ctx, batch)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*kinesis.Record) error); ok {
		r0 = rf(ctx, batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRecordWriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewRecordWriter creates a new instance of RecordWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRecordWriter(t mockConstructorTestingTNewRecordWriter) *RecordWriter {
	mock := &RecordWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
