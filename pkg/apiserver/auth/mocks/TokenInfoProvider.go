// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	oauth2 "google.golang.org/api/oauth2/v2"
)

// TokenInfoProvider is an autogenerated mock type for the TokenInfoProvider type
type TokenInfoProvider struct {
	mock.Mock
}

// GetTokenInfo provides a mock function with given fields: _a0
func (_m *TokenInfoProvider) GetTokenInfo(_a0 string) (*oauth2.Tokeninfo, error) {
	ret := _m.Called(_a0)

	var r0 *oauth2.Tokeninfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*oauth2.Tokeninfo, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) *oauth2.Tokeninfo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oauth2.Tokeninfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTokenInfoProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenInfoProvider creates a new instance of TokenInfoProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenInfoProvider(t mockConstructorTestingTNewTokenInfoProvider) *TokenInfoProvider {
	mock := &TokenInfoProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
