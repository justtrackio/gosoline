name: Gosoline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  mockery:
    name: mockery
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Execute mockery
        run: go generate -run='mockery' ./...

      - name: Check for empty diff
        run: |
          git add -A *
          changes=$(git status -s | grep -E '^[ ]?M|A') || true
          if [ "0" != $(echo -n $changes | wc -c) ]; then
            git status -s | grep -E '^[ ]?M|A'
            echo "please check the file list above and (re-)create those mocks locally with the mockery version v2.53.0!"
            echo "here's the diff:"
            git diff HEAD~0
            echo "end of diff"
            exit 1
          fi

  build:
    name: go build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

  golangci-lint:
    name: static code analysis (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Static code analysis (golangci-lint)
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6
          only-new-issues: true
          args: -v

  go-test:
    name: go test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: go test ./...

  go-test-race:
    name: go test (race)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test (race)
        run: go test -race ./...

  go-test-integration:
    name: go test (integration)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Integration tests
        run: go test -p 2 --tags='integration,fixtures' ./test/...
        env:
          TEST_COMPONENTS_DDB_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_DDB_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_LOCALSTACK_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_LOCALSTACK_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_MYSQL_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_MYSQL_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_REDIS_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_REDIS_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_S3_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_S3_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_WIREMOCK_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_WIREMOCK_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

  go-test-integration-race:
    name: go test (integration, race)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Integration tests (race)
        run: go test -p 2 -race --tags='integration,fixtures' ./test/...
        env:
          TEST_COMPONENTS_DDB_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_DDB_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_LOCALSTACK_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_LOCALSTACK_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_MYSQL_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_MYSQL_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_REDIS_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_REDIS_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_S3_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_S3_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          TEST_COMPONENTS_WIREMOCK_DEFAULT_IMAGE_AUTH_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_COMPONENTS_WIREMOCK_DEFAULT_IMAGE_AUTH_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
