name: Gosoline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  terraform-fmt:
    name: terraform fmt
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Execute terraform fmt -check -recursive .
        run: terraform fmt -check -recursive .

  go-fmt:
    name: go fmt
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Execute gofmt -l .
        run: gofmt -l .

      - name: Execute test -z $(gofmt -l .)
        run: test -z $(gofmt -l .)

  build:
    name: go build
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

  go-vet:
    name: static code analysis (go vet)
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Static code analysis
        run: go vet ./...

  golangci-lint:
    name: static code analysis (golangci-lint)
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Static code analysis (golangci-lint)
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.0
          args: --timeout 5m --print-issued-lines --print-linter-name --disable structcheck

  go-test:
    name: go test
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: go test ./...

  go-test-integration:
    name: go test (integration)
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Integration tests
        run: go test -p 2 --tags='integration,fixtures' ./test/...
